@model ArticleView

@{
    ViewData["Title"] = "Dodaj artykuł";

    ViewData["Page"] = "ArticleAdd";
    ViewData["Group"] = "Article";

    Layout = "~/Areas/Dashboard/Views/Shared/_Layout.cshtml";
}

<div class="page-inner">
    <div class="page-header">
        <h4 class="page-title">Dodawanie wpisu</h4>
        <ul class="breadcrumbs">
            <li class="nav-home">
                <a href="@Url.Action("Index","Dashboard", new {area = "dashboard" })">
                    <i class="flaticon-home"></i>
                </a>
            </li>
            <li class="separator">
                <i class="flaticon-right-arrow"></i>
            </li>
            <li class="nav-item">
                <a href="@Url.Action("List","Article", new { area = "dashboard" })">Wpisy</a>
            </li>
            <li class="separator">
                <i class="flaticon-right-arrow"></i>
            </li>
            <li class="nav-item">
                Dodawanie wpisu
            </li>
        </ul>
    </div>

    @using (Html.BeginForm("Add", "Article", new { area = "dashboard" }, FormMethod.Post, true, new { @enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })

        <!-- Tytuł i slug wpisu -->
        <div class="card">
            <div class="card-header">
                <div class="card-title">Podstawowe informacje</div>
            </div>
            <div class="card-body">

                <div class="input-icon mb-3">
                    <span class="input-icon-addon">
                        <i class="fas fa-pen-alt"></i>
                    </span>
                    @Html.TextBoxFor(x => x.Title, new { @class = "form-control", @placeholder = "Tytuł wpisu", @id = "post-title" })
                </div>

                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text" id="domain-name">https://twojadomena.pl/</span>
                    </div>
                    @Html.TextBoxFor(x => x.Slug, new { @class = "form-control", @id = "post-url" })
                </div>

            </div>
        </div>

        <!-- Treść wpisu -->
        <div class="card">
            <div class="card-header">
                <div class="card-title">Treść wpisu</div>
            </div>
            <div class="card-body">
                @Html.TextAreaFor(x => x.Content, new { @id = "summernote" })
            </div>
        </div>

        <div class="row">

            <div class="col-md-6">
                <!-- Zdjęcie wyróżniające -->
                <div style="min-height:500px;" class="card">
                    <div class="card-header">
                        <div class="d-flex align-items-center">
                            <h4 class="card-title">Zdjęcie wyrózniające</h4>

                            <button id="open-load-img-placeholder" class="btn btn-primary ml-auto">
                                <i class="fa fa-plus"></i>
                                Dołącz zdjęcie
                            </button>
                            <button id="delete-img-placeholder" class="btn btn-danger ml-3 d-none">
                                <i class="fa fa-times"></i>
                                Usuń zdjęcie
                            </button>

                        </div>
                    </div>
                    <div class="card-body mx-auto justify-content-center align-items-center flex-column">
                        <div class="form-group">
                            <div class="input-file input-file-image">
                                @if (Model != null && Model.FeaturedImg != null)
                                {
                                    <h3 style="color:red;" class="text-center">Dołącz swoje zdjęcie ponownie!</h3>
                                }
                                <img class="img-upload-preview" height="350" src="~/images/img-placeholder.png" alt="preview" id="img-placeholder">

                                @Html.TextBoxFor(x => x.FeaturedImg, null, new { type = "file", @class = "form-control form-control-file", @id = "input-img-placeholder" })
                            </div>
                        </div>

                    </div>

                </div>
            </div>

            <div class="col-md-6">
                <!-- Zajawka wpisu -->
                <div style="min-height:500px;" class="card">
                    <div class="card-header">
                        <div class="card-title">Zajawka wpisu</div>
                    </div>
                    <div class="card-body">
                        <div class="form-group">
                            <label for="comment">Wpisz treść zajawki</label>
                            @Html.TextAreaFor(x => x.Excerpt, new { @class = "form-control", @rows = "15" })
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <!-- Data publikacji -->
        <div class="card">
            <div class="card-header">
                <h4 class="card-title">Data publikacji</h4>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Data</label>
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.Date, new { @class = "form-control", @id = "datepicker" })
                                <div class="input-group-append">
                                    <span class="input-group-text">
                                        <i class="fa fa-calendar-check"></i>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Godzina</label>
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.Time, new { @class = "form-control", @id = "timepicker" })
                                <div class="input-group-append">
                                    <span class="input-group-text">
                                        <i class="fa fa-clock"></i>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Kategoria wpisu -->
        <div class="card">
            <div class="card-header">
                <div class="card-title">Kategorie wpisu</div>
            </div>
            <div class="card-body">
                <div class="form-group">
                    <div class="selectgroup selectgroup-pills">
                        @if (Enumerable.Count(ViewBag.Categories) != 0)
                        {
                            foreach (var category in ViewBag.Categories as List<CategoryModel>)
                            {
                                if (Model != null && Model.Categories != null && Model.Categories.Contains(category.Name))
                                {
                                    <label class="selectgroup-item">
                                        <input type="checkbox" name="categories" value="@category.Name" class="selectgroup-input" checked>
                                        <span class="selectgroup-button">@category.Name</span>
                                    </label>
                                }
                                else
                                {
                                    <label class="selectgroup-item">
                                        <input type="checkbox" name="categories" value="@category.Name" class="selectgroup-input">
                                        <span class="selectgroup-button">@category.Name</span>
                                    </label>
                                }

                            }
                        }
                        else
                        {
                            <h3>Brak dodanych kategorii wpisów</h3>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Tagi wpisu -->
        <div class="card">
            <div class="card-header">
                <div class="card-title">Tagi wpisu</div>
            </div>
            <div class="card-body">
                <div class="form-group">
                    <div class="selectgroup selectgroup-pills">
                        @if (Enumerable.Count(ViewBag.Tags) != 0)
                        {
                            foreach (var tag in ViewBag.Tags as List<TagModel>)
                            {
                                if (Model != null && Model.Tags != null && Model.Tags.Contains(tag.Name))
                                {
                                    <label class="selectgroup-item">
                                        <input type="checkbox" name="tags" value="@tag.Name" class="selectgroup-input" checked>
                                        <span class="selectgroup-button">@tag.Name</span>
                                    </label>
                                }
                                else
                                {
                                    <label class="selectgroup-item">
                                        <input type="checkbox" name="tags" value="@tag.Name" class="selectgroup-input">
                                        <span class="selectgroup-button">@tag.Name</span>
                                    </label>
                                }
                            }
                        }
                        else
                        {
                            <h3>Brak dodanych tagów wpisów</h3>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Ustawienia wpisu -->
        <div class="card">
            <div class="card-header">
                <div class="card-title">Ustawienia wpisu</div>
            </div>
            <div class="card-body">
                <div class="form-check">

                    <label class="form-check-label">
                        @Html.CheckBoxFor(x => x.CommentStatus, new { @class = "form-check-input" })
                        <span class="form-check-sign">Zezwalam na komentowanie wpisu</span>
                    </label>
                </div>

                <div class="form-check">
                    <label class="form-check-label">
                        @Html.CheckBoxFor(x => x.IsDraft, new { @class = "form-check-input" })
                        <span class="form-check-sign">Opublikuj jako szkic</span>
                    </label>
                </div>

            </div>
        </div>

        <div class="d-flex align-items-center">
            <button class="btn btn-primary" type="submit">
                <i class="fa fa-plus"></i>
                Dodaj wpis
            </button>
        </div>

    }
</div>

@section Scripts {
    <script>

        // 1. Ustawianie nazwy domeny w inpucie
        const domainName = document.querySelector("#domain-name");
        domainName.innerText = `${window.location.hostname}/`;

        // 2. Uzpełnianie sluga na podstawie tytyłu
        const titleInput = document.querySelector("#post-title");
        const slugInput = document.querySelector("#post-url");

        titleInput.addEventListener("keyup", function () {
            // 1. Trim -> usuwamy białe znaki z początku i końca
            // 2. Regex -> usuwamy znaki specjalne z linku
            // 3. Split + Join -> zamieniamy spacje na "-"
            // 4. toLowerCase -> zmieniamy wszystkie literki na małe
            slugInput.value = titleInput.value.trim().replace(/[&\/\\#,+()$~%.'":*?<>{}!]/g, "").split(" ").join("-").toLowerCase().trim("-");
        });

        //5. Otwieranie explorera plików
        const openLoadImgPlaceholder = document.querySelector("#open-load-img-placeholder");
        const inputImgPlaceholder = document.querySelector("#input-img-placeholder");

        openLoadImgPlaceholder.addEventListener("click", function (e) {
            e.preventDefault();
            inputImgPlaceholder.click();
        });

        // 6. Przekazywanie zdjęcia do placeholdera
        const imgPlaceholder = document.querySelector("#img-placeholder");
        const buttonPlaceholder = document.querySelector("#load-placeholder");
        const deleteButton = document.querySelector("#delete-img-placeholder");

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    // if na model zeby wykrył zdjęcie
                    imgPlaceholder.src = e.target.result;
                };
                reader.readAsDataURL(input.files[0]);

                // pokazujemy przycisk do usuwania
                deleteButton.classList.remove("d-none");
            }
        }

        // 7. Usuwanie placeholdera
        deleteButton.addEventListener("click", function (e) {
            e.preventDefault();
            imgPlaceholder.src = "/images/img-placeholder.png";
            deleteButton.classList.add("d-none");
        });

        // 8. Inicjalizacja datetimepicera aktualną datą i godziną
        const dateNow = new Date();

        console.log(dateNow);

        $('#datepicker').datetimepicker({
            format: 'DD-MM-YYYY',
            defaultDate: dateNow,
            icons: {
                next: "fa fa-arrow-right",
                previous: "fa fa-arrow-left"
            }
        });
        $('#timepicker').datetimepicker({
            format: 'HH:mm',
            defaultDate: dateNow,
            icons: {
                up: "fa fa-arrow-up",
                down: "fa fa-arrow-down"
            }
        });


        $('#summernote').summernote({
            placeholder: 'Pełna treść twojego wpisu',
            fontNames: [],
            tabsize: 2,
            height: 600
        });
    </script>
}

